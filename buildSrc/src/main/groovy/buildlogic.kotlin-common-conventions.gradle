plugins {
    id 'org.jetbrains.kotlin.jvm'
    id 'org.jlleitschuh.gradle.ktlint'
    id 'org.jetbrains.kotlinx.kover'
    id 'jacoco'
    id 'maven-publish'  // <-- Agregar el plugin maven-publish
}

repositories {
    mavenCentral()
    gradlePluginPortal()
}

dependencies {
    constraints {
        implementation 'org.apache.commons:commons-text:1.11.0'
    }

    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.jlleitschuh.gradle:ktlint-gradle:12.1.1'
    implementation 'org.jetbrains.kotlinx:kover-gradle-plugin:0.8.3'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.15.2'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}
group = "printScript"

version = "1.1.12"


tasks.named('test') {
    useJUnitPlatform()
    finalizedBy(tasks.jacocoTestReport) // El informe siempre se genera después de ejecutar las pruebas
}

jacoco {
    toolVersion = '0.8.12'
}

jacocoTestReport {
    dependsOn tasks.test // Las pruebas deben ejecutarse antes de generar el informe
    reports {
        xml.required.set(false)
        csv.required.set(false)
        html.required.set(true)
        html.outputLocation.set(layout.buildDirectory.dir('jacocoHtml'))
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'BUNDLE' // Verifica a nivel de módulo
            excludes = ['ast', 'cli', 'buildSrc'] // Excluye los módulos que no deseas verificar
            limit {
                minimum = 0.8 // Establece el coverage mínimo al 80%
            }
        }
    }
}

ktlint {
    version.set("0.49.1")
    outputToConsole.set(true)
    coloredOutput.set(true)
    ignoreFailures.set(false)
    reporters {
        reporter org.jlleitschuh.gradle.ktlint.reporter.ReporterType.PLAIN
        reporter org.jlleitschuh.gradle.ktlint.reporter.ReporterType.CHECKSTYLE
    }

    additionalEditorconfig.set([
            'indent_size'        : '4',
            'indent_style'       : 'space',
            'max_line_length'    : '120',
            'insert_final_newline': 'true'
    ])

    filter {
        exclude '/generated/'
        include '/kotlin/'
    }
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/FedeKraft/PrintScript2"
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }


    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}
